# docker-compose file to setup:
# - mysql
# - elasticsearch
# - backend: depends on mysql and elasticsearch
# - frontend: depends on backend

# This file is meant to aid local development and testing. It *must not* be
# used for production deployment.

services:

  mysql:
    container_name: biotools-mysql
    image: mysql:8.0.23
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=elixirroot
      - MYSQL_DATABASE=elixir
      - MYSQL_USER=elixir
      - MYSQL_PASSWORD=123
    volumes:
      - "data-mysql:/var/lib/mysql"
    ports:
      - "3306:3306"
    networks:
      - net

  elasticsearch:
    container_name: biotools-elasticsearch
    image: elasticsearch:7.12.1
    restart: unless-stopped
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - "data-elasticsearch:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - net
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    container_name: biotools-backend
    image: biotools/backend:latest
    build:
      context: ./backend
    environment:
      - BIOTOOLS_ELASTIC_SEARCH_URLS=http://elasticsearch:9200
      - BIOTOOLS_URL_FRONT=http://localhost/
      - BIOTOOLS_MYSQL_DB=elixir
      - BIOTOOLS_MYSQL_HOST=biotools-mysql
      - BIOTOOLS_MYSQL_PASSWORD=123
      - BIOTOOLS_MYSQL_USER=elixir
      - BIOTOOLS_EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    ports:
      - "8000:8000"
    networks:
      - net
    depends_on:
      mysql:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    links:
      - mysql
      - elasticsearch
    volumes:
      - ./backend:/elixir/application/backend:consistent
      - ./frontend:/elixir/application/frontend
      - backend_data:/elixir/application/backend/data # to avoid permission conflicts

  # dockerfile in frontend dir
  frontend:
    container_name: biotools-frontend
    image: biotools/frontend:latest
    build:
      context: ./frontend
    networks:
      - net
    depends_on:
      - backend
    volumes:
      - ./frontend:/home/biotools/frontend:consistent
      - biotools_node_modules:/home/biotools/frontend/node_modules
      - biotools_bower_components:/home/biotools/frontend/bower_components

  caddy:
    image: caddy:2
    container_name: biotools-caddy
    ports:
      - "80:80"
    volumes:
      - ./backend/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend:/elixir/application/frontend:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
      - frontend
    networks:
      - net
    restart: unless-stopped

networks:
  net:
    name: biotools-net
    driver: bridge

volumes:
  data-mysql:
  data-elasticsearch:
  biotools_node_modules:
  biotools_bower_components:
  caddy_data:
  caddy_config:
  backend_data:
